@model PetManagement.ViewModels.PETINFO

<h2><b>新增寵物資訊</b></h2>
<hr />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/font-awesome.css" rel="stylesheet" />
<link href="~/Content/windowAlert.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />
<link href="~/Content/OwnerStyle.css" rel="stylesheet" />

@using (Html.BeginForm("PetCreate", "UserInfo", FormMethod.Post, new { @id = "formPet" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        <div class="form-horizontal">
        </div>

        @*照片*@
        <div class="profile-picture-upload">
            <img src="" alt="Profile picture preview" class="imagePreview">
            <img id="imgOriginal" style="display:none;" src="~/Images/profile.jpg" />
            <button type="button" class="action-button mode-upload">上傳相片</button>
            <input type="file" class="hidden" name="fileInput" id="fileUploader" />
        </div>
        @*暱稱*@
        <div class="row form-group">
            <label class="col-md-1">@Html.LabelFor(m => Model.PET_NAME, new { @class = "control-label" })</label>
            <div class="col-md-5">
                @Html.TextBoxFor(m => m.PET_NAME, new { @class = "form-control required" })
                @Html.ValidationMessageFor(m => m.PET_NAME, "", new { @class = "text-danger", @style = "color:red" })
            </div>
        </div>
        @*種類*@
        <div class="row form-group">
            <label class="col-md-1">@Html.LabelFor(m => Model.KIND, new { @class = "control-label" })</label>
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.KIND, new SelectList(ViewBag.DDLKIND, "Value", "Text", -1), "---請選擇---", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PET_NAME, "", new { @class = "text-danger", @style = "color:red" })
            </div>
        </div>
        @*生日*@
                <div class="row form-group">
                    <label class="col-md-1">@Html.LabelFor(m => Model.BIRTHDAY, new { @class = "control-label" })</label>
                    <div class="input-group col-xs-6" style="padding-left: 15px;">
                        <div class="input-group date dtPicker ">
                            @Html.TextBoxFor(o => o.BIRTHDAY, new { @class = "form-control" })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
                @*性別*@
                <div class="row form-group">
                    <label class="col-md-1">@Html.LabelFor(m => Model.SEX, new { @class = "control-label" })</label>
                    <div class="col-md-5 button dropdown">
                        @Html.DropDownListFor(m => m.SEX, new SelectList(new List<SelectListItem>() { new SelectListItem() { Text = "男", Value = "M" }, new SelectListItem() { Text = "女", Value = "F" } }, "Value", "Text"))
                    </div>
                </div>
            </div>
    <div class="button-container">
        <button id="btnSave" type="submit"><span>新增</span></button>
    </div>
}

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/windowAlert.js"></script>
<script src="~/Scripts/moment.min.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>

@if (TempData["PetCreate"] != null)
{
    if (TempData["PetCreate"].ToString() == "True")
    {
        <script type="text/javascript">
            swal("寵物資料新增成功", "", "success");
        </script>
    }
    else
    {
        <script type="text/javascript">
            swal("寵物資料新增失敗", "請洽系統管理員！", "error");
        </script>
    }
}

<script type="text/javascript">
    let picturePreview = document.querySelector(".imagePreview");
    let pictureOriginal = document.getElementById("imgOriginal");
    let actionButton = document.querySelector(".action-button");
    let fileInput = document.querySelector("input[name='fileInput']");
    let fileReader = new FileReader();

    const DEFAULT_IMAGE_SRC = pictureOriginal.src;

    actionButton.addEventListener("click", () => {
        if (picturePreview.src !== DEFAULT_IMAGE_SRC) {
            resetImage();
        } else {
            fileInput.click();
        }
    });

    fileInput.addEventListener("change", () => {
        refreshImagePreview();
    });

    function resetImage() {
        setActionButtonMode("upload");
        picturePreview.src = DEFAULT_IMAGE_SRC;
        fileInput.value = "";
    }

    function setActionButtonMode(mode) {
        let modes = {
            upload: function () {
                actionButton.innerText = "上傳相片";
                actionButton.classList.remove("mode-remove");
                actionButton.classList.add("mode-upload");
            },
            remove: function () {
                actionButton.innerText = "移除相片";
                actionButton.classList.remove("mode-upload");
                actionButton.classList.add("mode-remove");
            }
        };
        return modes[mode] ? modes[mode]() : console.error("unknown mode");
    }

    function refreshImagePreview() {
        if (picturePreview.src !== DEFAULT_IMAGE_SRC) {
            picturePreview.src = DEFAULT_IMAGE_SRC;
        } else {
            if (fileInput.files && fileInput.files.length > 0) {
                fileReader.readAsDataURL(fileInput.files[0]);
                fileReader.onload = (e) => {
                    picturePreview.src = e.target.result;
                    setActionButtonMode("remove");
                };
            }
        }
    }

    refreshImagePreview();

    @* 日期 *@
        $('.dtPicker').datetimepicker({
            format: "YYYY-MM-DD"
        });

</script>
