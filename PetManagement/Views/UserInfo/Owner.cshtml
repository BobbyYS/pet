@model PetManagement.ViewModels.USERINFO

<h2><b>主人資訊</b></h2>
<hr />
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/bootstrap4-btn.css" rel="stylesheet" />
<link href="~/Content/main.css" rel="stylesheet" />
<link href="~/Content/windowAlert.css" rel="stylesheet" />
<link href="~/Content/font-awesome.min.css" rel="stylesheet" />
<link href="~/Content/OwnerStyle.css" rel="stylesheet" />

@using (Html.BeginForm("Owner", "UserInfo", FormMethod.Post, new { @id = "formOwner", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        <div class="form-horizontal">
        </div>
        @*照片*@
        <div class="profile-picture-upload">
            <img src="" alt="Profile picture preview" class="imagePreview">
            <img id="imgOriginal" style="display:none;" src="~/Images/profile.jpg" />
            <button type="button" class="action-button mode-upload">上傳相片</button>
            @Html.TextBoxFor(m => m.FILE_IMG, new { @class = "hidden", @type = "file" })
            @*<input type="file" class="hidden" name="fileInput" id="fileUploader" />*@
        </div>

        @*姓名*@
        <div class="row form-group">
            <label class="col-md-1">@Html.LabelFor(m => Model.USER_NAME, new { @class = "control-label" })</label>
            <div class="col-md-5">
                @Html.TextBoxFor(m => m.USER_NAME, new { @class = "form-control required" })
                @Html.ValidationMessageFor(m => m.USER_NAME, "", new { @class = "text-danger", @style = "color:red" })
            </div>
        </div>
        @*信箱*@
        <div class="row form-group">
            <label class="col-md-1">@Html.LabelFor(m => Model.EMAIL, new { @class = "control-label" })</label>
            <div class="col-md-5">
                @Html.TextBoxFor(m => m.EMAIL, new { @class = "form-control", @readonly = "@readonly" })
            </div>
        </div>
        @*電話*@
        <div class="row form-group">
            <label class="col-md-1">@Html.LabelFor(m => Model.TEL, new { @class = "control-label" })</label>
            <div class="col-md-5">
                @Html.TextBoxFor(m => m.TEL, new { @class = "form-control" })
            </div>
        </div>
        @*地址*@
        <div class="row form-group">
            <label class="col-md-1">@Html.LabelFor(m => Model.ADDR, new { @class = "control-label" })</label>
            <div class="col-md-5">
                @Html.TextBoxFor(m => m.ADDR, new { @class = "form-control" })
            </div>
        </div>
        @*性別*@
        <div class="row form-group">
            <label class="col-md-1">@Html.LabelFor(m => Model.SEX, new { @class = "control-label" })</label>
            <div class="col-md-5 button dropdown">
                @Html.DropDownListFor(m => m.SEX, new SelectList(new List<SelectListItem>() { new SelectListItem() { Text = "男", Value = "M" }, new SelectListItem() { Text = "女", Value = "F" } }, "Value", "Text"))
            </div>
        </div>
    </div>
    <div class="button-container">
        <button id="btnSave" type="submit"><span>存檔</span></button>
    </div>
}

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/windowAlert.js"></script>

@if (TempData["OwnerModify"] != null)
{
    if (TempData["OwnerModify"].ToString() == "True")
    {
        <script type="text/javascript">
            swal("會員資料更新成功", "", "success");
        </script>
    }
    else
    {
        <script type="text/javascript">
            swal("會員資料更新失敗", "請洽系統管理員！", "error");
        </script>
    }
}

<script type="text/javascript">
    debugger;
    let picturePreview = document.querySelector(".imagePreview");
    let pictureOriginal = document.getElementById("imgOriginal");
    let actionButton = document.querySelector(".action-button");
    let fileInput = document.querySelector("input[name='FILE_IMG']");
    let fileReader = new FileReader();

    const DEFAULT_IMAGE_SRC = pictureOriginal.src;

    actionButton.addEventListener("click", () => {
        debugger;
        if (picturePreview.src !== DEFAULT_IMAGE_SRC) {
            resetImage();
        } else {
            fileInput.click();
        }
    });

    fileInput.addEventListener("change", () => {
        debugger;
        refreshImagePreview();
    });

    function resetImage() {
        debugger;
        setActionButtonMode("upload");
        picturePreview.src = DEFAULT_IMAGE_SRC;
        fileInput.value = "";
    }

    function setActionButtonMode(mode) {
        debugger;
        let modes = {
            upload: function () {
                actionButton.innerText = "上傳相片";
                actionButton.classList.remove("mode-remove");
                actionButton.classList.add("mode-upload");
            },
            remove: function () {
                actionButton.innerText = "移除相片";
                actionButton.classList.remove("mode-upload");
                actionButton.classList.add("mode-remove");
            }
        };
        return modes[mode] ? modes[mode]() : console.error("unknown mode");
    }

    function refreshImagePreview() {
        debugger;
        if (picturePreview.src !== DEFAULT_IMAGE_SRC) {
            debugger;
            picturePreview.src = DEFAULT_IMAGE_SRC;
        } else {
            if (fileInput.files && fileInput.files.length > 0) {
                debugger;
                fileReader.readAsDataURL(fileInput.files[0]);
                fileReader.onload = (e) => {
                    picturePreview.src = e.target.result;
                    setActionButtonMode("remove");
                };
            }
        }
    }


    refreshImagePreview();

</script>
